// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/docker-existing-dockerfile
{
	"name": "JNAV Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "user",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.cpptools",
		"ms-python.python",
		"twxs.cmake",
		"eamodio.gitlens",
		"ms-azuretools.vscode-docker",
		"betwo.b2-catkin-tools"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [
		"--privileged", // Run privileged support for interfacing with /dev
		"--network=host", // Run on host's network
		"--gpus=all", // Run nvidia drivers
		"--env", "DISPLAY=${env:DISPLAY}", // Pass the host display
	],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": [
		"source=/dev,target=/dev,type=bind", // Share all devices with host
		"source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind", // Mount the X11 socket to use gui
	],
}
